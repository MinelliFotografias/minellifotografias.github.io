'use strict';var _get=function a(b,c,d){null===b&&(b=Function.prototype);var e=Object.getOwnPropertyDescriptor(b,c);if(e===void 0){var f=Object.getPrototypeOf(b);return null===f?void 0:a(f,c,d)}if('value'in e)return e.value;var g=e.get;return void 0===g?void 0:g.call(d)},_createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return b&&('object'==typeof b||'function'==typeof b)?b:a}function _inherits(a,b){if('function'!=typeof b&&null!==b)throw new TypeError('Super expression must either be null or a function, not '+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}(function(){'use strict';function a(a,b){var c=document.createElement(a);if(b){(function extend(a,b){for(name in b){var c=b[name];a[name]=c}})(c,b)}return c}function b(b,c){var d=a('button',b);return'function'==typeof c&&d.addEventListener('click',function(){c(this)}),d}function c(){20<document.body.scrollTop||20<document.documentElement.scrollTop?(document.getElementById('logo').style.opacity='1',document.getElementById('faixa').style.opacity='0'):(document.getElementById('logo').style.opacity='0',document.getElementById('faixa').style.opacity='1')}var d=function(){function a(b){if(_classCallCheck(this,a),this.config=b,!(this instanceof a))return new a(this.config);this.parent=this.config.parent;var c=this.config.parentSelector||'.slider';if(!this.parent)try{this.parent=document.querySelector(c)}catch(a){throw'[SLIDER]: Container n\xE3o encontrado.'}var d=this.config.childSelector||'.slide';if(!(this.children=this.parent.querySelectorAll(d)))throw'[SLIDER]: Slides n\xE3o encontrados.';this.index=0,this.duration=this.config.duration||3e3,this.compose()}return _createClass(a,[{key:'compose',value:function compose(){var a,b;return b=0<this.index?this.index-1:this.children.length-1,a=this.index<this.children.length-1?this.index+1:0,Array.prototype.forEach.call(this.children,function(a){return a.classList.remove('prev'),a.classList.remove('current'),a.classList.remove('next'),!0}),this.children[b].classList.add('prev'),this.children[this.index].classList.add('current'),this.children[a].classList.add('next'),this}},{key:'play',value:function play(){var a;return a=this,this.playingStateID=setInterval(function(){return a.next()},this.duration),this.isPlaying=!0,this}},{key:'pause',value:function pause(){return clearInterval(this.playingStateID),this.isPlaying=!1,this}},{key:'playpause',value:function playpause(){return this.isPlaying?this.pause():this.play()}},{key:'prev',value:function prev(){var a;if(0<this.index?this.index--:this.index=this.children.length-1,a=this.isPlaying,a&&this.pause(),this.compose(),a)return this.play()}},{key:'next',value:function next(){var a;if(this.index<this.children.length-1?this.index++:this.index=0,a=this.isPlaying,a&&this.pause(),this.compose(),a)return this.play()}},{key:'on',value:function on(a,b){return this.parent.addEventListener(a,b),this}},{key:'off',value:function off(a,b){return this.parent.removeEventListener(a,b),this}},{key:'inspect',value:function inspect(){var a;console.group(this.parentSelector);try{console.info(this.children.length+' slides')}catch(b){a=b,console.error(a)}return console.groupEnd(this.parentSelector),this}}]),a}(),e=function(a){function b(a){return _classCallCheck(this,b),a.parentSelector='.carousel',_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,a))}return _inherits(b,a),_createClass(b,[{key:'compose',value:function compose(){var a=_get(b.prototype.__proto__||Object.getPrototypeOf(b.prototype),'compose',this).call(this),c=Array.prototype.slice.call(this.children),d=this.index+1,e=c.length;return c.forEach(function(a,b){var c=b-d+1;0>c&&(c=e-d+b+1),a.setAttribute('data-order',c),c==e-1&&a.setAttribute('data-order','last')}),a}}]),b}(d);document.body.addEventListener('touchstart',function(){return!1}),window.onscroll=function(){c()};var f=document.querySelector('.site-header').offsetHeight,g=document.querySelectorAll('a[href^="'+baseurl+'/#"].scroll');Array.prototype.forEach.call(g,function(a){return a.addEventListener('click',function(){var a=document.querySelector(this.hash);return!!a&&void scrollToY(a.offsetTop-f,1e3)})});var h={prevIcon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 477.175 477.175"><path d="M145.188 238.575l215.5-215.5c5.3-5.3 5.3-13.8 0-19.1s-13.8-5.3-19.1 0l-225.1 225.1c-5.3 5.3-5.3 13.8 0 19.1l225.1 225c2.6 2.6 6.1 4 9.5 4s6.9-1.3 9.5-4c5.3-5.3 5.3-13.8 0-19.1l-215.4-215.5z"/></svg>',nextIcon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 477.175 477.175"><path d="M360.731 229.075l-225.1-225.1c-5.3-5.3-13.8-5.3-19.1 0s-5.3 13.8 0 19.1l215.5 215.5-215.5 215.5c-5.3 5.3-5.3 13.8 0 19.1 2.6 2.6 6.1 4 9.5 4 3.4 0 6.9-1.3 9.5-4l225.1-225.1c5.3-5.2 5.3-13.8.1-19z"/></svg>'},i=document.querySelectorAll('.carousel');Array.prototype.forEach.call(i,function(c){var d=new e({parent:c,duration:5e3});if(d.parent.hasAttribute('data-autoplay')&&d.on('mouseover',function(){d.pause()}).on('mouseout',function(){d.play()}).play(),d.parent.hasAttribute('data-controls')){var f=a('div',{className:'slider-controls'});f.setAttribute('data-grid','justify row'),f.appendChild(b({className:'slider-control prev icon',title:'VOLTAR',innerHTML:h.prevIcon},function(){d.prev()})),f.appendChild(b({className:'slider-control next icon',title:'AVAN\xC7AR',innerHTML:h.nextIcon},function(){d.next()})),d.parent.appendChild(f)}})})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
